{"prompt":"In Dafny, we have the following ADT:\n\n```dafny\ndatatype Foo = Bar(n: nat) | Baz(x: Foo)\n```\n\nTake the denotation of a Foo to be 2 times n for a Bar, and the denotations of its Foo for a Baz.\n\n```dafny\nfunction denotation(foo: Foo): nat\n{\n","chosen":"  match foo\n  case Bar(n) => 2 * n\n  case Baz(x) => denotation(x)\n}\n","rejected":"    if foo is Bar then 2 * foo.n\n    else if foo is Baz then denotation(foo.x)\n    else 0\n}\n"}
{"prompt":"In Dafny, we have the following ADT:\n\n```dafny\ndatatype Foo = Bar(n: nat) | Baz(x: Foo)\n```\n\nTake the denotation of a Foo to be 2 times n for a Bar, and the denotations of its Foo for a Baz.\n\n```dafny\nfunction denotation(foo: Foo): nat\n{\n","chosen":"  match foo\n  case Bar(n) => 2 * n\n  case Baz(x) => denotation(x)\n}\n","rejected":"  matches foo\n  case Bar(n) => 2 * n\n  case Baz(x) => denotation(x)\n}\n"}
{"prompt":"In Dafny, we have the following ADT:\n\n```dafny\ndatatype Foo = Bar(n: nat) | Baz(x: Foo)\n```\n\nTake the denotation of a Foo to be 2 times n for a Bar, and the denotations of its Foo for a Baz.\n\n```dafny\nfunction denotation(foo: Foo): nat\n{\n","chosen":"  match foo\n  case Bar(n) => 2 * n\n  case Baz(x) => denotation(x)\n}\n","rejected":"  match foo\n  case Bar(n): 2 * n\n  case Baz(x): denotation(x)\n}\n"}
{"prompt":"In Dafny, we have the following ADT:\n\n```dafny\ndatatype Foo = Bar(n: nat) | Baz(x: Foo)\n```\n\nTake the denotation of a Foo to be 2 times n for a Bar, and the denotations of its Foo for a Baz.\n\n```dafny\nfunction denotation(foo: Foo): nat\n{\n","chosen":"  match foo\n  case Bar(n) => 2 * n\n  case Baz(x) => denotation(x)\n}\n","rejected":"  match foo\n  case Bar(n): return 2 * n\n  case Baz(x): return denotation(x)\n}\n"}
